--<< Services >>--
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--<< Variables >>--
local Handshake = ReplicatedStorage.Remotes.CharacterSoundEvent
local Hooks = {}
local HandshakeInts = {}

for i, v in getgc() do
    if typeof(v) == "function" and islclosure(v) then
        if (#getprotos(v) == 1) and table.find(getconstants(getproto(v, 1)), 4000001) then
            hookfunction(v, function() end)
        end
    end
end

Hooks.__namecall = hookmetamethod(game, "__namecall", function(self, ...)
    local Method = getnamecallmethod()
    local Args = {...}

    if not checkcaller() and (self == Handshake) and (Method == "fireServer") and (Args[1] == "\65\67\240\159\146\171") then
        if (#HandshakeInts == 0) then
            HandshakeInts = {table.unpack(Args[2], 2, 18)}
        end

        for i, v in HandshakeInts do
            Args[2][i + 1] = v
        end
    end

 Hooks.__namecall(self, ...)
end)

task.wait(3)


local NEVERLOSE = loadstring(game:HttpGet("https://raw.githubusercontent.com/3345-c-a-t-s-u-s/NEVERLOSE-UI-Nightly/main/source.lua"))()

-- Change Theme --
NEVERLOSE:Theme("dark") -- [ dark , nightly , original ]
------------------

local Window = NEVERLOSE:AddWindow("Donio Hub","Section")
local Notification = NEVERLOSE:Notification()

Notification.MaxNotifications = 6

Window:AddTabLabel('Home')

local ExampleTab = Window:AddTab('Example Tab','earth') -- [ads , list , folder , earth , locked , home , mouse , user]
local MainTab = Window:AddTab('Test','ads')

local Example = ExampleTab:AddSection('Example',"left")

Example:AddLabel("Label")


Example:AddButton("League Magnets",function()
    while wait() do
        --find ball
        for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") then

            if v.Name == "Football" then
                --set distance 
                v.Size = Vector3.new(5, 5, 5)
            end
        end
        end
        end
end)


Example:AddButton("Legit Magnets",function()
    while wait() do
        --find ball
        for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") then

            if v.Name == "Football" then
                --set distance 
                v.Size = Vector3.new(9, 9, 9)
            end
        end
        end
        end
end)
