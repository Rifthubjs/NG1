local players =  game:GetService("Players");
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local ts = game:GetService("TweenService")
local localPlayer = players.LocalPlayer;
local colorNew, color3RGB = Color3.new, Color3.fromRGB;
local Mouse = localPlayer:GetMouse();

local library = {
    Keybind = Enum.KeyCode.LeftControl,
    connections = {}, 
    Theme = {
        Accent = Color3.fromRGB(86, 95, 232),
        LightText = Color3.fromRGB(255,255,255),
        outline =Color3.fromRGB(50,50,50),
        DarkText = Color3.fromRGB(188,188,188),
        Background = Color3.fromRGB(15, 15, 15),
        Background_Image = "rbxassetid://2151741365",
        Bar_color = Color3.fromRGB(18,18,18),
        Elemnts_color = Color3.fromRGB(26, 26, 26)
    }
}

local utility = {}
function utility:Connect(connection, func) -- // using it to disconnect any running connections when the UI is destroyed
    local con = connection:Connect(func)
    table.insert(library.connections, con)
    return con
end
function utility:ToRGB(color)  
    return color.R*255,color.G*255,color.B*255
end
function utility:Is_hover_over_object(Instance)
    local is_hovering

    utility:Connect(Instance.MouseEnter, function()
        is_hovering = true 

    end)
    utility:Connect(Instance.MouseLeave, function()
        is_hovering = false 

    end)
    return is_hovering
end
local function CreateDrag(gui)
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        ts:Create(gui, TweenInfo.new(0.16, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)}):Play();
    end

    local lastEnd = 0
    --[[
    local function closeClosables()
        if os.clock() < lastEnd + 0.5 then
            return
        end
        --lastEnd = os.clock()
        for _, item in ipairs(library.thingsToClose) do
            task.spawn(function()
                if type(item) == 'table' and rawget(item, "Close") then
                    local can = true
                    if item.lastOpened and os.clock() < item.lastOpened + 0.5 then
                        can = false 
                    end
                    for _, asd in ipairs(item.MainFrames) do
                        if isHoveringOverObj(asd) then
                            can = false
                        end 
                    end
                    if can then
                        item:Close();
                    end
                end
            end)
        end 
    end
    ]]
    local lastMoved = 0
    local con
    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position

        end
    end)

    uis.InputEnded:Connect(function(input)

        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            --closeClosables()
        end
    end)


    gui.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
            lastMoved = os.clock()
        end
    end)

    uis.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)

end
function library:Window(title)

    local window = {first_tab = nil, tabcount = 0}

    local test = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
    test.Name = "Meta_hub_ui"
    test.IgnoreGuiInset = true
    test.Enabled = true
    test.ResetOnSpawn = false

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "Main_frame"
    mainFrame.BackgroundColor3 = library.Theme.Background
    mainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    mainFrame.BorderSizePixel = 0
    mainFrame.Position = UDim2.new(0.227, 0, 0.274, 0)
    mainFrame.Size = UDim2.new(0, 653, 0, 553)
    mainFrame.Parent = test 
    local notificationList = Instance.new("Frame",test)
    notificationList.Name = "Notification_list"
    notificationList.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    notificationList.BackgroundTransparency = 1
    notificationList.BorderColor3 = Color3.fromRGB(0, 0, 0)
    notificationList.BorderSizePixel = 0
    notificationList.Position = UDim2.new(0, 0, 0.0297, 0)
    notificationList.Size = UDim2.new(0, 282, 0, 771)

    local uIListLayout = Instance.new("UIListLayout")
    uIListLayout.Name = "UIListLayout"
    uIListLayout.Padding = UDim.new(0, 4)
    uIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uIListLayout.Parent = notificationList


    local backgroundImage = Instance.new("ImageLabel")
    backgroundImage.Name = "Background_image"
    backgroundImage.Image = library.Theme.Background_Image --"rbxassetid://2151741365"
    backgroundImage.ImageColor3 = Color3.fromRGB(0, 0, 0)
    backgroundImage.ScaleType = Enum.ScaleType.Tile
    backgroundImage.TileSize = UDim2.new(0, 400, 0, 400)
    backgroundImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    backgroundImage.BackgroundTransparency = 1
    backgroundImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
    backgroundImage.BorderSizePixel = 0
    backgroundImage.Position = UDim2.new(0, 0, 0.0106, 0)
    backgroundImage.Size = UDim2.new(1, 0, 0.989, 0)
    backgroundImage.Parent = mainFrame


    local uICorner = Instance.new("UICorner")
    uICorner.Name = "UICorner"
    uICorner.Parent = backgroundImage

    local sideBar = Instance.new("Frame")
    sideBar.Name = "Side_Bar"
    sideBar.BackgroundColor3 = library.Theme.Bar_color
    sideBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sideBar.BorderSizePixel = 0
    sideBar.Position = UDim2.new(0, 0, 0.0832, 0)
    sideBar.Size = UDim2.new(0, 200, 0, 506)

    local uICorner = Instance.new("UICorner")
    uICorner.Name = "UICorner"
    uICorner.Parent = sideBar

    local usernameFrame = Instance.new("Frame")
    usernameFrame.Name = "Username_frame"
    usernameFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    usernameFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    usernameFrame.BorderSizePixel = 0
    usernameFrame.Position = UDim2.new(0.0479, 0, 0.891, 0)
    usernameFrame.Size = UDim2.new(0, 184, 0, 43)

    local uICorner1 = Instance.new("UICorner")
    uICorner1.Name = "UICorner"
    uICorner1.Parent = usernameFrame

    local uIStroke = Instance.new("UIStroke")
    uIStroke.Name = "UIStroke"
    uIStroke.Color = library.Theme.outline
    uIStroke.Parent = usernameFrame

    local userImage = Instance.new("ImageLabel")
    userImage.Name = "User_image"
    userImage.Image = "rbxthumb://type=AvatarHeadShot&id=" .. game.Players.LocalPlayer.UserId .."&w=420&h=420" 
    userImage.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    userImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
    userImage.BorderSizePixel = 0
    userImage.Position = UDim2.new(0.0393, 0, 0.111, 0)
    userImage.Size = UDim2.new(0, 32, 0, 32)

    local uICorner2 = Instance.new("UICorner")
    uICorner2.Name = "UICorner"
    uICorner2.CornerRadius = UDim.new(0, 90)
    uICorner2.Parent = userImage

    local uIStroke1 = Instance.new("UIStroke")
    uIStroke1.Name = "UIStroke"
    uIStroke1.Color = library.Theme.outline
    uIStroke1.Parent = userImage

    userImage.Parent = usernameFrame

    local username = Instance.new("TextLabel")
    username.Name = "Username"
    username.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
    username.Text = [[]] .. [[<font color="rgb(86, 95, 232)">]] .. game.Players.LocalPlayer.Name .. [[ </font>]]--"Welcome," ..  tostring("<font color=rgb(189, 172, 255)> <b> game.Players.LocalPlayer.Name </b></font>")--game.Players.LocalPlayer.Name)
    username.TextColor3 = Color3.fromRGB(255, 255, 255)
    username.TextSize = 12
    username.TextXAlignment = Enum.TextXAlignment.Left
    username.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    username.BackgroundTransparency = 1
    username.BorderColor3 = Color3.fromRGB(0, 0, 0)
    username.BorderSizePixel = 0
    username.Position = UDim2.new(0.259, 0, 0, 0)
    username.Size = UDim2.new(0, 140, 0, 43)
    username.Parent = usernameFrame
    username.RichText = true 

    usernameFrame.Parent = sideBar

    local sideOutline = Instance.new("Frame")
    sideOutline.Name = "side_outline"
    sideOutline.BackgroundColor3 = library.Theme.outline
    sideOutline.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sideOutline.BorderSizePixel = 0
    sideOutline.Position = UDim2.new(1, 0, 0, 0)
    sideOutline.Size = UDim2.new(0, 1, 1, 0)

    local uICorner3 = Instance.new("UICorner")
    uICorner3.Name = "UICorner"
    uICorner3.Parent = sideOutline

    sideOutline.Parent = sideBar

    sideBar.Parent = mainFrame

    local topBar = Instance.new("Frame")
    topBar.Name = "Top_bar"
    topBar.BackgroundColor3 = library.Theme.Bar_color
    topBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    topBar.BorderSizePixel = 0
    topBar.Size = UDim2.new(0, 653, 0, 46)

    --[[
    local dragDetection = Instance.new("TextButton",topBar)
    dragDetection.Name = "Drag_detection"
    dragDetection.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
    dragDetection.Text = ""
    dragDetection.TextColor3 = Color3.fromRGB(0, 0, 0)
    dragDetection.TextSize = 14
    dragDetection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dragDetection.BackgroundTransparency = 1
    dragDetection.BorderColor3 = Color3.fromRGB(0, 0, 0)
    dragDetection.BorderSizePixel = 0
    dragDetection.Position = UDim2.new(-1.4e-07, 0, 0, 0)
    dragDetection.Size = UDim2.new(0, 544, 0, 38)
]]
    local wiiTitle = Instance.new("TextLabel")
    wiiTitle.Name = "Wii_title"
    wiiTitle.RichText = true 

    wiiTitle.FontFace = Font.new(
        "rbxasset://fonts/families/GothamSSm.json",
        Enum.FontWeight.Bold
        --Enum.FontStyle.Italic
    )
    wiiTitle.Text =  title -- [[<font color=rgb(86,95,232>Wii]]
    wiiTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    wiiTitle.TextSize = 18
    wiiTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    wiiTitle.BackgroundTransparency = 1
    wiiTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
    wiiTitle.BorderSizePixel = 0
    wiiTitle.Position = UDim2.new(0.0408, 0, -0.0435, 0)
    wiiTitle.Size = UDim2.new(0, 75, 0, 50)
    wiiTitle.Parent = topBar


    local minimize = Instance.new("ImageButton")
    minimize.Name = "Minimize"
    minimize.Image = "rbxassetid://9886659276"
    minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    minimize.BackgroundTransparency = 1
    minimize.BorderColor3 = Color3.fromRGB(0, 0, 0)
    minimize.BorderSizePixel = 0
    minimize.Position = UDim2.new(0.88, 0, 0.127, 0)
    minimize.Size = UDim2.new(0, 16, 0, 16)
    minimize.Parent = topBar

    local exit = Instance.new("ImageButton")
    exit.Name = "Exit"
    exit.Image = "rbxassetid://9886659671"
    exit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    exit.BackgroundTransparency = 1
    exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
    exit.BorderSizePixel = 0
    exit.Position = UDim2.new(0.964, 0, 0.127, 0)
    exit.Size = UDim2.new(0, 16, 0, 16)
    exit.Parent = topBar

    local maximize = Instance.new("ImageButton")
    maximize.Name = "Maximize"
    maximize.Image = "rbxassetid://9886659406"
    maximize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    maximize.BackgroundTransparency = 1
    maximize.BorderColor3 = Color3.fromRGB(0, 0, 0)
    maximize.BorderSizePixel = 0
    maximize.Position = UDim2.new(0.921, 0, 0.127, 0)
    maximize.Size = UDim2.new(0, 16, 0, 16)
    maximize.Parent = topBar

    local topOutline = Instance.new("Frame")
    topOutline.Name = "Top_outline"
    topOutline.BackgroundColor3 = library.Theme.outline
    topOutline.BorderColor3 = Color3.fromRGB(0, 0, 0)
    topOutline.BorderSizePixel = 0
    topOutline.Position = UDim2.new(0.308, 0, 1, 0)
    topOutline.Size = UDim2.new(0.692, 0, 0, 1)

    local uICorner4 = Instance.new("UICorner")
    uICorner4.Name = "UICorner"
    uICorner4.CornerRadius = UDim.new(0, 20)
    uICorner4.Parent = topOutline

    topOutline.Parent = topBar

    local uICorner5 = Instance.new("UICorner")
    uICorner5.Name = "UICorner"
    uICorner5.Parent = topBar

    topBar.Parent = mainFrame

    local uICorner6 = Instance.new("UICorner")
    uICorner6.Name = "UICorner"
    uICorner6.Parent = mainFrame

    local tabContainer = Instance.new("ScrollingFrame")
    tabContainer.Name = "Tab_container"
    tabContainer.AutomaticCanvasSize = Enum.AutomaticSize.Y
    tabContainer.CanvasSize = UDim2.new()
    tabContainer.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
    tabContainer.ScrollBarImageTransparency = 1
    tabContainer.ScrollBarThickness = 0
    tabContainer.ScrollingDirection = Enum.ScrollingDirection.Y
    tabContainer.Active = true
    tabContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    tabContainer.BackgroundTransparency = 1
    tabContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
    tabContainer.BorderSizePixel = 0
    tabContainer.Position = UDim2.new(0, 0, 0.00198, 0)
    tabContainer.Size = UDim2.new(0, 204, 0, 428)
    tabContainer.Parent = sideBar
    local uIListLayout = Instance.new("UIListLayout")
    uIListLayout.Name = "UIListLayout"
    uIListLayout.Padding = UDim.new(0, 5)
    uIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    uIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uIListLayout.Parent = tabContainer

    local placeholder = Instance.new("Frame")
    placeholder.Name = "Placeholder"
    placeholder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    placeholder.BackgroundTransparency = 1
    placeholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    placeholder.BorderSizePixel = 0
    placeholder.Size = UDim2.new(0, 6, 0, 6)
    placeholder.Parent = tabContainer
    local sectionHolders = Instance.new("Frame",mainFrame)
    sectionHolders.Name = "SectionHolders"
    sectionHolders.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sectionHolders.BackgroundTransparency = 1
    sectionHolders.BorderColor3 = Color3.fromRGB(0, 0, 0)
    sectionHolders.BorderSizePixel = 0
    sectionHolders.Position = UDim2.new(0, 200, 0, 50)
    sectionHolders.Size = UDim2.new(0, 451, 0, 504)

    minimize.MouseButton1Click:Connect(function()
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["SectionHolders"].Visible = false
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Side_Bar"].Visible = false 
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Top_bar"]["Top_outline"].Visible = false 
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Side_Bar"]["Tab_container"].Visible = false
        --task.wait(0.2)
        ts:Create( localPlayer:WaitForChild("PlayerGui")["prestige_hub_ui"]["Main_frame"]["SectionHolders"], TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 451, 0, 0)}):Play()
        ts:Create( localPlayer:WaitForChild("PlayerGui")["rift_hub_ui"]["Main_frame"]["Side_Bar"], TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 200, 0, 0)}):Play()
        ts:Create(mainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 653,0,43)}):Play()
        ts:Create( localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Side_Bar"]["Tab_container"], TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 204, 0, 0)}):Play()

    end)

    maximize.MouseButton1Click:Connect(function()
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Top_Bar"].Visible = true
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Top_bar"]["Top_outline"].Visible = true 
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Side_Bar"]["Tab_container"].Visible = true
         localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Side_Bar"].Visible = true 
        task.wait(0.2)
        ts:Create( localPlayer:WaitForChild("PlayerGui")["Meta_hub_ui"]["Main_frame"]["Side_Bar"]["Tab_container"], TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 204, 0, 428)}):Play()
        ts:Create( localPlayer:WaitForChild("PlayerGui")["meta_hub_ui"]["Main_frame"]["SectionHolders"], TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 451, 0, 504)}):Play()
        ts:Create( localPlayer:WaitForChild("PlayerGui")["meta_hub_ui"]["Main_frame"]["Side_Bar"], TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 200, 0, 506)}):Play()
        ts:Create(mainFrame, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0, 653, 0, 553)}):Play()

        task.wait(0.1)
         localPlayer:WaitForChild("PlayerGui")["meta_hub_ui"]["Main_frame"]["SectionHolders"].Visible = true
         localPlayer:WaitForChild("PlayerGui")["meta_hub_ui"]["Main_frame"]["Side_Bar"]["Tab_container"].Visible = true


    end)
    local mainFramevisbility 

    exit.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
        mainFramevisbility = false
    end)
    utility:Connect(uis.InputBegan, function(input,gpe)
        if input.KeyCode == library.Keybind then 
            mainFramevisbility = not mainFramevisbility
            mainFrame.Visible = mainFramevisbility
        end
    end)
    CreateDrag(mainFrame)

    --[[
    local Start_pos 
    local dragging = false

    utility:Connect(dragDetection.InputBegan, function(input)
        if mainFrame.Visible and input.UserInputType == Enum.UserInputType.MouseButton1  then
            Start_pos = uis:GetMouseLocation() 
            dragging = true
        end
    end)
    utility:Connect(dragDetection.InputChanged, function(input)
        if mainFrame.Visible and input.UserInputType == Enum.UserInputType.MouseMovement and dragging then

            mainFrame.Position = mainFrame.Position + UDim2.new(0,uis:GetMouseLocation().X - Start_pos.X ,0,uis:GetMouseLocation().Y - Start_pos.Y)
            Start_pos  = uis:GetMouseLocation()

        end
    end)

    utility:Connect(dragDetection.InputEnded, function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            Start_pos = nil
            mainFrame.Position = mainFrame.Position + UDim2.new(0,uis:GetMouseLocation().X - Start_pos.X ,0,uis:GetMouseLocation().Y - Start_pos.Y)
        end
    end)
]]	

    function window:Notification(Info)

        local Info = Info or {}
        local old_tick = tick()
        local title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Notification "
        local duration = Info.Duration or Info.duration or Info.dur or Info.Dur or 3
        local NOTIFICATION = {}

        local notificationFrame = Instance.new("Frame",notificationList)
        notificationFrame.Name = "Notification_frame"
        notificationFrame.BackgroundColor3 = library.Theme.Background
        notificationFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        notificationFrame.BorderSizePixel = 0
        notificationFrame.Position = UDim2.new(0.0871, 0, 0.134, 0)
        notificationFrame.Size = UDim2.new(0, 304, 0, 55)
        notificationFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY

        local uICorner = Instance.new("UICorner")
        uICorner.Name = "UICorner"
        uICorner.Parent = notificationFrame

        local notificationHeader = Instance.new("Frame")
        notificationHeader.Name = "Notification_Header"
        notificationHeader.BackgroundColor3 = Color3.fromRGB(86, 95, 232)
        notificationHeader.BorderColor3 = Color3.fromRGB(0, 0, 0)
        notificationHeader.BorderSizePixel = 0
        notificationHeader.Size = UDim2.new(0, 4, 0, 55)

        local uICorner1 = Instance.new("UICorner")
        uICorner1.Name = "UICorner"
        uICorner1.Parent = notificationHeader

        notificationHeader.Parent = notificationFrame

        local notificationBackgroundImage = Instance.new("ImageLabel")
        notificationBackgroundImage.Name = "notification_ Background_image"
        notificationBackgroundImage.Image = "rbxassetid://2151741365"
        notificationBackgroundImage.ImageColor3 = Color3.fromRGB(0, 0, 0)
        notificationBackgroundImage.ScaleType = Enum.ScaleType.Tile
        notificationBackgroundImage.TileSize = UDim2.new(0, 400, 0, 400)
        notificationBackgroundImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        notificationBackgroundImage.BackgroundTransparency = 1
        notificationBackgroundImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
        notificationBackgroundImage.BorderSizePixel = 0
        notificationBackgroundImage.Position = UDim2.new(0.023, 0, 0.0106, 0)
        notificationBackgroundImage.Size = UDim2.new(0.977, 0, 0.989, 0)

        local uICorner2 = Instance.new("UICorner")
        uICorner2.Name = "UICorner"
        uICorner2.Parent = notificationBackgroundImage

        notificationBackgroundImage.Parent = notificationFrame

        local textLabel = Instance.new("TextLabel")
        textLabel.Name = "TextLabel"
        textLabel.Text = title
        textLabel.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
        textLabel.TextColor3 = library.Theme.DarkText
        textLabel.TextSize = 12
        textLabel.TextXAlignment = Enum.TextXAlignment.Left
        textLabel.TextYAlignment = Enum.TextYAlignment.Top
        textLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        textLabel.BackgroundTransparency = 1
        textLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        textLabel.BorderSizePixel = 0
        textLabel.Position = UDim2.new(0.0592, 0, 0.222, 0)
        textLabel.Size = UDim2.new(0, 286, 0, 42)
        textLabel.Parent = notificationFrame

        local frame = Instance.new("Frame")
        frame.Name = "Frame"
        frame.BackgroundColor3 = Color3.fromRGB(86, 95, 232)
        frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        frame.BorderSizePixel = 0
        frame.Size = UDim2.new(0, 0, 0, 4)

        local uICorner3 = Instance.new("UICorner")
        uICorner3.Name = "UICorner"
        uICorner3.Parent = frame

        frame.Parent = notificationFrame

        local init = false 

        function NOTIFICATION.destroy(self)
            for i,v in ipairs(notificationFrame:GetChildren()) do 
                if not v:IsA("UICorner") then 
                    ts:Create(v, TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =1 }):Play()
                end
            end 
            self.Timer:Disconnect()

            task.wait(0.6)
            notificationFrame:Destroy()

        end

        NOTIFICATION.Timer = utility:Connect(rs.Heartbeat, function()

            frame.Size = UDim2.new(0,((tick()-old_tick) / duration) * (notificationFrame.AbsoluteSize.X),0,4)

            if tick() - old_tick > duration and not init then
                init = true

                NOTIFICATION:destroy()
            end
        end)


    end
    function window.CreateTab(self,Info)
        local Info = Info or {}
        local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Tab"
        local ImageId = Info.Image or Info.image or Info.ID or Info.id or "rbxassetid://" --"rbxassetid://14395804654"
        local tab = {}
        self.tabcount = self.tabcount + 1
        if self.tabcount == 1 then 
            self.first_tab = Title
        end		


        local tabFrame = Instance.new("Frame")
        tabFrame.Name = "Tab_frame"
        tabFrame.BackgroundColor3 = Color3.fromRGB(106, 106, 106)
        tabFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tabFrame.BorderSizePixel = 0
        tabFrame.Position = UDim2.new(0.0196, 0, 0.0935, 0)
        tabFrame.Size = UDim2.new(0, 182, 0, 34)
        tabFrame.Parent = tabContainer

        local uICorner = Instance.new("UICorner")
        uICorner.Name = "UICorner"
        uICorner.Parent = tabFrame

        local tabImage = Instance.new("ImageLabel")
        tabImage.Name = "tab_image"
        tabImage.Image = ImageId 
        tabImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tabImage.BackgroundTransparency = 1
        tabImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tabImage.BorderSizePixel = 0
        tabImage.Position = UDim2.new(0.1, 0, 0.235, 0)
        tabImage.Size = UDim2.new(0, 17, 0, 17)
        tabImage.Parent = tabFrame
        tabImage.ImageColor3 = library.Theme.DarkText
        local tabTitle = Instance.new("TextLabel")
        tabTitle.Name = "Tab_title"
        tabTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
        tabTitle.TextColor3 = Color3.fromRGB(226, 226, 226)
        tabTitle.TextSize = 12
        tabTitle.Text = Title
        tabTitle.TextXAlignment = Enum.TextXAlignment.Left
        tabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tabTitle.BackgroundTransparency = 1
        tabTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tabTitle.BorderSizePixel = 0
        tabTitle.Position = UDim2.new(0.208, 0, 0, 0)
        tabTitle.Size = UDim2.new(0.787, 0, 1, 0)
        tabTitle.Parent = tabFrame

        local indicator = Instance.new("Frame")
        indicator.Name = "Indicator"
        indicator.BackgroundColor3 = library.Theme.Accent --Color3.fromRGB(86, 95, 232)
        indicator.BorderColor3 = Color3.fromRGB(0, 0, 0)
        indicator.BorderSizePixel = 0
        indicator.Position = UDim2.new(0.978, 0, 0, 0)
        indicator.Size = UDim2.new(0, 3, 1, 0)
        indicator.Parent = tabFrame


        local uIGradient = Instance.new("UIGradient")
        uIGradient.Name = "UIGradient"
        uIGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(162, 162, 162)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255)),
        })
        uIGradient.Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0.8),
            NumberSequenceKeypoint.new(1, 0.8),
        })
        uIGradient.Parent = tabFrame

        tabFrame.Parent = tabContainer


        local sectionContainer = Instance.new("ScrollingFrame",sectionHolders)
        sectionContainer.Name = Title
        sectionContainer.AutomaticCanvasSize = Enum.AutomaticSize.Y
        sectionContainer.CanvasPosition = Vector2.new(0, 200)
        sectionContainer.CanvasSize = UDim2.new(0, 0, 1, 200)
        sectionContainer.HorizontalScrollBarInset = Enum.ScrollBarInset.Always
        sectionContainer.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
        sectionContainer.ScrollBarImageTransparency = 1
        sectionContainer.ScrollBarThickness = 0
        sectionContainer.ScrollingDirection = Enum.ScrollingDirection.Y
        sectionContainer.Active = true
        sectionContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        sectionContainer.BackgroundTransparency = 1
        sectionContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
        sectionContainer.BorderSizePixel = 0
        sectionContainer.Position = UDim2.new(0,0,0,0)
        sectionContainer.Size = UDim2.new(0, 451,0, 504)
        local uIListLayout = Instance.new("UIListLayout",sectionContainer)
        uIListLayout.Name = "UIListLayout"
        uIListLayout.Padding = UDim.new(0, 5)
        uIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        uIListLayout.SortOrder = Enum.SortOrder.LayoutOrder


        local tabDetetctor = Instance.new("TextButton")
        tabDetetctor.Name = "Tab_detetctor"
        tabDetetctor.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
        tabDetetctor.Text = ""
        tabDetetctor.TextColor3 = Color3.fromRGB(0, 0, 0)
        tabDetetctor.TextSize = 14
        tabDetetctor.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        tabDetetctor.BackgroundTransparency = 1
        tabDetetctor.BorderColor3 = Color3.fromRGB(0, 0, 0)
        tabDetetctor.BorderSizePixel = 0
        tabDetetctor.Size = UDim2.new(1, 0, 1, 0)
        tabDetetctor.Parent = tabFrame

        --// First tab initialization 
        for i,v in pairs(sectionHolders:GetChildren()) do 

            if   v.Name == Title and self.first_tab == Title then 
                v.Visible = true
                ts:Create(tabImage, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 =color3RGB(255,255,255)}):Play()
                ts:Create(tabFrame, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =0}):Play()
                ts:Create(tabTitle, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 =color3RGB(255,255,255)}):Play()
                ts:Create(indicator, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =0}):Play()

            elseif v.Name == Title and self.first_tab ~= Title then 
                v.Visible = false
                ts:Create(tabImage, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 =color3RGB(188,188,188)}):Play()
                ts:Create(tabTitle, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 =color3RGB(188,188,188)}):Play()
                ts:Create(tabFrame, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =1}):Play()
                ts:Create(indicator, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency = 1}):Play()

            end

        end

        local Opened = false 
        -- 
        tabDetetctor.MouseButton1Click:Connect(function()
            for _,v in pairs( localPlayer:WaitForChild("PlayerGui")["prestige_hub_ui"]["Main_frame"]["Side_Bar"]["Tab_container"]:GetChildren()) do 
                if v.Name == "Tab_frame"  then 

                    ts:Create(v["tab_image"], TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 =color3RGB(188,188,188)}):Play()
                    ts:Create(v["Tab_title"], TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 =color3RGB(188,188,188)}):Play()
                    ts:Create(v.Indicator, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =1}):Play()
                    ts:Create(v, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency = 1}):Play()


                end 
                ts:Create(tabImage, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {ImageColor3 =color3RGB(255,255,255)}):Play()
                ts:Create(tabFrame, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =0}):Play()
                ts:Create(tabTitle, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 =color3RGB(255,255,255)}):Play()
                ts:Create(indicator, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundTransparency =0}):Play()

            end 


            for _,v in pairs( localPlayer:WaitForChild("PlayerGui")["rift_hub_ui"]["Main_frame"]["SectionHolders"]:GetChildren()) do 
                if v:IsA("ScrollingFrame") then 
                    v.Visible = false 

                end

            end
            for _,v in pairs( localPlayer:WaitForChild("PlayerGui")["prestige_hub_ui"]["Main_frame"]["SectionHolders"]:GetChildren()) do 
                if v:IsA("ScrollingFrame") and v.Name == Title then 
                    v.Visible = true 

                end

            end

        end)


        local searchFrame = Instance.new("Frame",sectionContainer)
        searchFrame.Name = "Search_Frame"
        searchFrame.BackgroundColor3 = library.Theme.Bar_color -- Color3.fromRGB(28, 28, 28)
        searchFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        searchFrame.BorderSizePixel = 0
        searchFrame.Position = UDim2.new(0.0597, 0, 1.27, 0)
        searchFrame.Size = UDim2.new(0, 376, 0, 42)

        local uICorner = Instance.new("UICorner")
        uICorner.Name = "UICorner"
        uICorner.CornerRadius = UDim.new(0, 6)
        uICorner.Parent = searchFrame

        local uIStroke = Instance.new("UIStroke")
        uIStroke.Name = "UIStroke"
        uIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        uIStroke.Color = library.Theme.outline
        uIStroke.Parent = searchFrame

        local searchInputFrame = Instance.new("Frame")
        searchInputFrame.Name = "Search_input_Frame"
        searchInputFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        searchInputFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        searchInputFrame.BorderSizePixel = 0
        searchInputFrame.Position = UDim2.new(0.0279, 0, 0.126, 0)
        searchInputFrame.Size = UDim2.new(0, 357, 0, 30)

        local uICorner1 = Instance.new("UICorner")
        uICorner1.Name = "UICorner"
        uICorner1.CornerRadius = UDim.new(0, 6)
        uICorner1.Parent = searchInputFrame

        local uIStroke1 = Instance.new("UIStroke")
        uIStroke1.Name = "UIStroke"
        uIStroke1.Color = library.Theme.outline
        uIStroke1.Parent = searchInputFrame

        local search = Instance.new("ImageButton")
        search.Name = "search"
        search.Image = "rbxassetid://3926305904"
        search.ImageColor3 = Color3.fromRGB(171, 171, 171)
        search.ImageRectOffset = Vector2.new(964, 324)
        search.ImageRectSize = Vector2.new(36, 36)
        search.BackgroundTransparency = 1
        search.Position = UDim2.new(0.0294, 0, 0.211, 0)
        search.Size = UDim2.new(0, 18, 0, 18)
        search.ZIndex = 2
        search.Parent = searchInputFrame

        local Search_textbox = Instance.new("TextBox")
        Search_textbox.Name = "TextBox"
        Search_textbox.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
        Search_textbox.Text = ""
        Search_textbox.TextColor3 = Color3.fromRGB(218, 218, 218)
        Search_textbox.TextSize = 12
        Search_textbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Search_textbox.BackgroundTransparency = 0.99
        Search_textbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Search_textbox.BorderSizePixel = 0
        Search_textbox.Position = UDim2.new(0, 0, 0, 0)
        Search_textbox.Size = UDim2.new(1, 0, 1, 0)
        Search_textbox.Parent = searchInputFrame

        searchInputFrame.Parent = searchFrame
        --	sectionContainer.Visible = true
        Search_textbox:GetPropertyChangedSignal('Text'):Connect(function()
            local InputText = string.upper(Search_textbox.Text)
            for i,v in pairs( localPlayer:WaitForChild("PlayerGui")["meta_hub_ui"]["Main_frame"]["SectionHolders"]:GetChildren() ) do
                if v:IsA("ScrollingFrame") then 

                    for _,elements in ipairs(v:GetChildren()) do
                        if elements ~= "UIListLayout" then 


                            if elements:IsA("Frame") and elements.Name ~= 'Placeholder' and elements.Name ~= "Search_Frame"  then
                                if InputText==""or string.find(string.upper(elements.Name),InputText)~=nil then
                                    elements.Visible=true

                                else
                                    elements.Visible=false
                                end 
                            end
                        end
                    end
                end 
            end
        end)

        function tab.CreateSection(self,Info)
            local Info = Info or {}
            local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Section"
            local section = {}

            local ElementsHolding_section = Instance.new("Frame",sectionContainer)
            ElementsHolding_section.Name = "Holding Section Elements"
            ElementsHolding_section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ElementsHolding_section.BackgroundTransparency = 1
            ElementsHolding_section.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ElementsHolding_section.BorderSizePixel = 0
            ElementsHolding_section.Position = UDim2.new(-0.00111, 0, -1.03, 0)
            ElementsHolding_section.Size = UDim2.new(0, 0, 0, 0)
            local uIListLayout_section = Instance.new("UIListLayout",ElementsHolding_section)
            uIListLayout_section.Name = "UIListLayout"
            uIListLayout_section.Padding = UDim.new(0, 8)
            uIListLayout_section.HorizontalAlignment = Enum.HorizontalAlignment.Center
            uIListLayout_section.SortOrder = Enum.SortOrder.LayoutOrder 
            uIListLayout_section:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                ElementsHolding_section.Size = UDim2.new(0,270,0,uIListLayout_section.AbsoluteContentSize.Y + 10)
            end)
            local placeholder = Instance.new("Frame",ElementsHolding_section)
            placeholder.Name = "Placeholder"
            placeholder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            placeholder.BackgroundTransparency = 1
            placeholder.BorderColor3 = Color3.fromRGB(0, 0, 0)
            placeholder.BorderSizePixel = 0
            placeholder.Size = UDim2.new(0, 1, 0, 1)
            local sectionTitle = Instance.new("TextLabel")
            sectionTitle.Name = "section_title"
            sectionTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
            sectionTitle.Text = Title
            sectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            sectionTitle.TextSize = 12
            sectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            sectionTitle.BackgroundColor3 = library.Theme.LightText
            sectionTitle.BackgroundTransparency = 1
            sectionTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
            sectionTitle.BorderSizePixel = 0
            sectionTitle.Position = UDim2.new(0.0942, 0, 0.0181, 0)
            sectionTitle.Size = UDim2.new(0, 395, 0, 22)
            sectionTitle.Parent = ElementsHolding_section

            function section.CreateToggle(self,Info)
                local Info = Info or {}
                local Value = Info.Default or Info.default or Info.def or Info.Def or Info.CurrentValue or Info.value
                local callback = Info.Callback or Info.callback or function() end
                local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Toggle"
                local Flag = Info.Flag or Info.flag or Info.Pointer or Info.pointer or Title
                local TOGGLE = {}

                local toggle = Instance.new("Frame")
                toggle.Name = Title
                toggle.BackgroundColor3 = library.Theme.Elemnts_color

                toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                toggle.BorderSizePixel = 0
                toggle.Position = UDim2.new(0.0915, 0, 0.0119, 0)
                toggle.Size = UDim2.new(0, 378, 0, 37)
                toggle.Parent = ElementsHolding_section
                local toggleTitle = Instance.new("TextLabel")
                toggleTitle.Name = "Toggle_title"
                toggleTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                toggleTitle.TextColor3 = library.Theme.DarkText
                toggleTitle.TextSize = 12
                toggleTitle.Text = Title
                toggleTitle.TextXAlignment = Enum.TextXAlignment.Left
                toggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                toggleTitle.BackgroundTransparency = 1
                toggleTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                toggleTitle.BorderSizePixel = 0
                toggleTitle.Position = UDim2.new(0.037, 0, 0, 0)
                toggleTitle.Size = UDim2.new(0, 301, 0, 37)
                toggleTitle.Parent = toggle

                local switch = Instance.new("Frame")
                switch.Name = "Switch"
                switch.AnchorPoint = Vector2.new(1, 0.5)
                switch.BackgroundColor3 = Color3.fromRGB(86, 95, 232)
                switch.BorderSizePixel = 0
                switch.Position = UDim2.new(0.992, -10, -0.0578, 20)
                switch.Size = UDim2.new(0, 41, 0, 22)

                local indicator = Instance.new("Frame")
                indicator.Name = "Indicator"
                indicator.AnchorPoint = Vector2.new(0, 0.5)
                indicator.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
                indicator.BorderSizePixel = 0
                indicator.Position = UDim2.new(1, -20, 0.5, 0)
                indicator.Size = UDim2.new(0, 18, 0, 18)

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.CornerRadius = UDim.new(1, 0)
                uICorner.Parent = indicator

                indicator.Parent = switch

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = library.Theme.outline
                uIStroke.Parent = switch

                local uICorner1 = Instance.new("UICorner")
                uICorner1.Name = "UICorner"
                uICorner1.CornerRadius = UDim.new(0, 15)
                uICorner1.Parent = switch

                switch.Parent = toggle

                local uIStroke1 = Instance.new("UIStroke")
                uIStroke1.Name = "UIStroke"
                uIStroke1.Color = library.Theme.outline
                uIStroke1.Parent = toggle

                local uICorner2 = Instance.new("UICorner")
                uICorner2.Name = "UICorner"
                uICorner2.Parent = toggle	

                local Toggle_detector = Instance.new("TextButton")
                Toggle_detector.Parent = toggle
                Toggle_detector.Name = "TextButton"
                Toggle_detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                Toggle_detector.Text = ""
                Toggle_detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                Toggle_detector.TextSize = 14
                Toggle_detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Toggle_detector.BackgroundTransparency = 1
                Toggle_detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Toggle_detector.BorderSizePixel = 0
                Toggle_detector.Size = UDim2.fromScale(1, 1)

                function TOGGLE.Setvalue(self,Bool)

                    pcall(callback,Bool)
                    local ToggleIndicatorColor = Bool == true and Color3.fromRGB(208, 206, 203) or Color3.fromRGB(95, 96, 96) 
                    local ToggleIndicatorPos = Bool == true and  UDim2.new(1, -21,0.5, 0) or UDim2.new(0,2,0.5, 0)
                    local Toggleframe_Color = Bool == true and  library.Theme.Accent or Color3.fromRGB(43, 43, 43) 
                    local toggletextcolor = Bool == true and  library.Theme.LightText or library.Theme.DarkText

                    ts:Create(toggleTitle, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {TextColor3 =toggletextcolor}):Play()
                    ts:Create(indicator, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundColor3 =ToggleIndicatorColor}):Play()
                    ts:Create(indicator, TweenInfo.new(0.14, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {Position =ToggleIndicatorPos}):Play()
                    ts:Create(switch, TweenInfo.new(0.26, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut), {BackgroundColor3 =Toggleframe_Color}):Play()


                end 
                Toggle_detector.MouseButton1Click:Connect(function()
                    Value = not Value 
                    TOGGLE:Setvalue(Value)

                end)

                TOGGLE:Setvalue(Value)		
                return TOGGLE
            end 
            function section.Button(self,Info)
                local Info = Info or {}
                local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Button"
                local callback = Info.Callback or Info.callback or function() end
                local BUTTON = {}

                local button = Instance.new("Frame",ElementsHolding_section)
                button.Name = Title
                button.BackgroundColor3 = library.Theme.Elemnts_color

                button.BorderColor3 = Color3.fromRGB(0, 0, 0)
                button.BorderSizePixel = 0
                button.Position = UDim2.new(0.0915, 0, 0.0119, 0)
                button.Size = UDim2.new(0, 378, 0, 37)

                local butonTitle = Instance.new("TextLabel")
                butonTitle.Name = "Buton_title"
                butonTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                butonTitle.TextColor3 = library.Theme.LightText
                butonTitle.TextSize = 12
                butonTitle.Text = Title
                butonTitle.TextXAlignment = Enum.TextXAlignment.Left
                butonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                butonTitle.BackgroundTransparency = 1
                butonTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                butonTitle.BorderSizePixel = 0
                butonTitle.Position = UDim2.new(0.037, 0, 0, 0)
                butonTitle.Size = UDim2.new(0, 60, 0, 37)
                butonTitle.Parent = button

                local buttonimage = Instance.new("ImageLabel")
                buttonimage.Name = "Buttonimage"
                buttonimage.Image = "rbxassetid://8498776661"
                buttonimage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                buttonimage.BackgroundTransparency = 1
                buttonimage.BorderColor3 = Color3.fromRGB(0, 0, 0)
                buttonimage.BorderSizePixel = 0
                buttonimage.Position = UDim2.new(0.912, 0, 0.224, 0)
                buttonimage.Size = UDim2.new(0, 20, 0, 20)
                buttonimage.Parent = button

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = library.Theme.outline
                uIStroke.Parent = button

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = button
                local Button_detector = Instance.new("TextButton")
                Button_detector.Parent = button
                Button_detector.Name = "TextButton"
                Button_detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                Button_detector.Text = ""
                Button_detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                Button_detector.TextSize = 14
                Button_detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Button_detector.BackgroundTransparency = 1
                Button_detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Button_detector.BorderSizePixel = 0
                Button_detector.Size = UDim2.fromScale(1, 1)
                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = Button_detector


                Button_detector.MouseButton1Click:Connect(function()
                    ts:Create(Button_detector, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Transparency =0.6}):Play()
                    Button_detector.Transparency = 0
                    task.wait(.1)
                    ts:Create(Button_detector, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Transparency =1}):Play()

                    callback()
                end)
                return BUTTON
            end
            function section.Textbox(self,Info)

                local TEXTBOX = {}
                local Value = Info.Default or Info.default or Info.def or Info.Def or Info.Value or Info.value or "Text"
                local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Textbox"
                local callback = Info.Callback or Info.callback or function() end	


                local textbox = Instance.new("Frame",ElementsHolding_section)
                textbox.Name = Title
                textbox.BackgroundColor3 = library.Theme.Elemnts_color

                textbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                textbox.BorderSizePixel = 0
                textbox.Position = UDim2.new(0.0809, 0, 0.621, 0)
                textbox.Size = UDim2.new(0, 378, 0, 37)

                local textboxTitle = Instance.new("TextLabel")
                textboxTitle.Name = "Textbox_title"
                textboxTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                textboxTitle.Text = Title
                textboxTitle.TextColor3 = Color3.fromRGB(157, 157, 157)
                textboxTitle.TextSize = 12
                textboxTitle.TextXAlignment = Enum.TextXAlignment.Left
                textboxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                textboxTitle.BackgroundTransparency = 1
                textboxTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                textboxTitle.BorderSizePixel = 0
                textboxTitle.Position = UDim2.new(0.037, 0, 0, 0)
                textboxTitle.Size = UDim2.new(0, 301, 0, 37)
                textboxTitle.Parent = textbox

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = library.Theme.outline
                uIStroke.Parent = textbox

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = textbox

                local textboxFrame = Instance.new("Frame")
                textboxFrame.Name = "Textbox_frame"
                textboxFrame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                textboxFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                textboxFrame.BorderSizePixel = 0
                textboxFrame.Position = UDim2.new(0, 330, 0.156, 0)
                textboxFrame.Size = UDim2.new(0, 143, 0, 24)

                local uICorner1 = Instance.new("UICorner")
                uICorner1.Name = "UICorner"
                uICorner1.Parent = textboxFrame

                local uIStroke1 = Instance.new("UIStroke")
                uIStroke1.Name = "UIStroke"
                uIStroke1.Color = library.Theme.outline
                uIStroke1.Parent = textboxFrame

                local textBox = Instance.new("TextBox")
                textBox.Name = "text_box"
                textBox.ClearTextOnFocus = false
                textBox.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                textBox.Text = Value
                textBox.TextColor3 = Color3.fromRGB(144, 144, 144)
                textBox.TextSize = 12
                textBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                textBox.BackgroundTransparency = 1
                textBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                textBox.BorderSizePixel = 0
                textBox.Size = UDim2.new(1, 0, 1, 0)
                textBox.Parent = textboxFrame

                textboxFrame.Parent = textbox
                textBox.FocusLost:Connect(function()
                    local text = textBox.Text
                    uIStroke1.Color = library.Theme.outline 
                    textBox.TextColor3 = library.Theme.DarkText
                    return callback(text)
                end)				
                textBox.Focused:Connect(function()
                    textBox.TextColor3 = library.Theme.LightText
                    uIStroke1.Color = library.Theme.LightText 
                end)	
                textBox:GetPropertyChangedSignal('TextBounds'):Connect(function()
                    textboxFrame.Size = UDim2.new(0, textBox.TextBounds.X + 20, 0, 24) --  UDim2.new(0, 58, 0, 24)

                    textboxFrame.Position =  UDim2.new(0, 345 - (textBox.TextBounds.X ), 0.156, 0)
                end)				
                return TEXTBOX
            end

            function section.Keybind(self,Info)
                local KEYBIND = {}
                local Info = Info or {}
                local Flag = Info.Flag or Info.flag or Info.Pointer or Info.pointer or Title
                local Mode = Info.Mode or Info.mode or "Toggle"
                local keybind_default = Info.Default or Info.default or Info.Def or Info.def or Enum.KeyCode.Q
                local Keybind_Title = Info.Title or Info.title or Info.Text or Info.text or Info.Name or Info.name or "Textbox"
                local callback = Info.Callback or Info.callback or function() end 
                local Keybinding,Holding,keybindValue = false,false,false 
                local holdmode =   Mode == "Hold" and true or false 
                local togglemode = Mode == "Toggle" and true or false 
                local Buttonmode = Mode == "Button" and true or false 
                local short_keybind_names = {["MouseButton1"] = "MB1", ["MouseButton2"] = "MB2", ["MouseButton3"] = "MB3", ["Insert"] = "INS", ["LeftAlt"] = "LALT", ["LeftControl"] = "LC", ["LeftShift"] = "LS", ["RightAlt"] = "RALT", ["RightControl"] = "RC", ["RightShift"] = "RS", ["CapsLock"] = "CAPS", ["Return"] = "RET", ["Backspace"] = "BSP", ["BackSlash"] = "BS"}
                local WhitelistedMouse = {Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2,Enum.UserInputType.MouseButton3}
                local BlacklistedKeys = {Enum.KeyCode.Unknown,Enum.KeyCode.W,Enum.KeyCode.A,Enum.KeyCode.S,Enum.KeyCode.D,Enum.KeyCode.Up,Enum.KeyCode.Left,Enum.KeyCode.Down,Enum.KeyCode.Right,Enum.KeyCode.Slash,Enum.KeyCode.Tab,Enum.KeyCode.Backspace,Enum.KeyCode.Escape}

                local keybind = Instance.new("Frame",ElementsHolding_section)
                keybind.Name =Title
                keybind.BackgroundColor3 = library.Theme.Elemnts_color

                keybind.BorderColor3 = Color3.fromRGB(0, 0, 0)
                keybind.BorderSizePixel = 0
                keybind.Position = UDim2.new(0.0809, 0, 0.621, 0)
                keybind.Size = UDim2.new(0, 378, 0, 37)

                local keybindTitle = Instance.new("TextLabel")
                keybindTitle.Name = "Keybind_title"
                keybindTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                keybindTitle.Text = Keybind_Title
                keybindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
                keybindTitle.TextSize = 12
                keybindTitle.TextXAlignment = Enum.TextXAlignment.Left
                keybindTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                keybindTitle.BackgroundTransparency = 1
                keybindTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                keybindTitle.BorderSizePixel = 0
                keybindTitle.Position = UDim2.new(0.037, 0, 0, 0)
                keybindTitle.Size = UDim2.new(0, 301, 0, 37)
                keybindTitle.Parent = keybind

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = library.Theme.outline
                uIStroke.Parent = keybind

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = keybind

                local keybindFrame = Instance.new("Frame")
                keybindFrame.Name = "Keybind_frame"
                keybindFrame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                keybindFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                keybindFrame.BorderSizePixel = 0

                local uICorner1 = Instance.new("UICorner")
                uICorner1.Name = "UICorner"
                uICorner1.Parent = keybindFrame

                local uIStroke1 = Instance.new("UIStroke")
                uIStroke1.Name = "UIStroke"
                uIStroke1.Color = library.Theme.outline
                uIStroke1.Parent = keybindFrame

                local Keybindtotext= tostring(keybind_default.Name) 

                local keybindDetector = Instance.new("TextButton")
                keybindDetector.Name = "Keybind_detector"
                keybindDetector.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                keybindDetector.Text = short_keybind_names[Keybindtotext] or Keybindtotext:upper() 
                keybindDetector.TextColor3 = Color3.fromRGB(144, 144, 144)
                keybindDetector.TextSize = 12
                keybindDetector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                keybindDetector.BackgroundTransparency = 1
                keybindDetector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                keybindDetector.BorderSizePixel = 0
                keybindDetector.Size = UDim2.new(1, 0, 1, 0)
                keybindDetector.Parent = keybindFrame
                keybindFrame.Size = UDim2.new(0, keybindDetector.TextBounds.X + 20, 0, 24) --  UDim2.new(0, 58, 0, 24)
                keybindFrame.Position =  UDim2.new(0, 345 - (keybindDetector.TextBounds.X ), 0.156, 0)

                keybindFrame.Parent = keybind

                keybindDetector:GetPropertyChangedSignal('TextBounds'):Connect(function()
                    keybindFrame.Size = UDim2.new(0, keybindDetector.TextBounds.X + 20, 0, 24) --  UDim2.new(0, 58, 0, 24)

                    keybindFrame.Position =  UDim2.new(0, 345 - (keybindDetector.TextBounds.X ), 0.156, 0)
                end)
                function KEYBIND.CheckKey(self,tab, key)
                    for i, v in next, tab do
                        if v == key then
                            return true
                        end
                    end
                end
                function KEYBIND:Setkey(Key)
                    Keybinding = false
                    keybind_default_text = tostring(Key.Name) or tostring(keybind_default.Name)
                    keybind_default = Key.Name
                    keybindDetector.Text = short_keybind_names[keybind_default_text] or keybind_default_text:upper() 
                end
                KEYBIND:Setkey(keybind_default)
                keybindDetector.MouseButton1Click:Connect(function()
                    if Keybinding ~= true then 
                        Keybinding = true
                        keybindDetector.Text = "..."

                    end
                end)

                utility:Connect(uis.InputBegan, function(Input)

                    if (Input.KeyCode.Name == keybind_default or Input.UserInputType.Name == keybind_default) and not Keybinding then
                        if holdmode then
                            Holding = true
                            callback(Holding)
                        elseif not Keybinding and togglemode then 
                            keybindValue = not keybindValue
                            callback(keybindValue)
                        end
                    elseif Keybinding then
                        local key 
                        pcall(function()
                            if not KEYBIND:CheckKey(BlacklistedKeys, Input.KeyCode) then
                                key = Input.KeyCode
                            end
                        end)
                        pcall(function()
                            if KEYBIND:CheckKey(WhitelistedMouse, Input.UserInputType) and not Key then

                                key = Input.UserInputType
                            end
                        end)
                        key = key or keybind_default
                        KEYBIND:Setkey(key)
                    end
                end)

                utility:Connect(uis.InputEnded, function(Input)
                    if Input.KeyCode.Name ==keybind_default or Input.UserInputType.Name ==keybind_default then
                        if holdmode and Holding then
                            Holding = false
                            callback(Holding)
                        end
                    end
                end)
                utility:Connect(uis.InputEnded, function(Input)
                    if Input.KeyCode.Name ==keybind_default or Input.UserInputType.Name ==keybind_default then
                        if Buttonmode  then
                            callback()
                        end
                    end
                end)
                return KEYBIND

            end

            function section.Dropdown(self,Info)

                local Info = Info or {}
                local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Button"
                local callback = Info.Callback or Info.callback or function() end				
                local list = Info.List or Info.list or Info.Table or Info.table or Info.Options or {"Option 1", "option 2"}
                local CurrentValue = Info.Default or Info.default or Info.def or Info.Def or Info.CurrentOption or Info.value or list[1]
                local Multi = Info.Multi or Info.multi or false 
                local Flag = Info.Flag or Info.flag or Info.Pointer or Info.pointer or Title
                local DROPDOWN = {}

                local dropdown = Instance.new("Frame",ElementsHolding_section)
                dropdown.Name = "Dropdown"
                dropdown.BackgroundColor3 = library.Theme.Elemnts_color

                dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdown.BorderSizePixel = 0
                dropdown.Position = UDim2.new(0.0915, 0, 0.0119, 0)
                dropdown.Size = UDim2.new(0, 378, 0, 37)

                local dropdownTitle = Instance.new("TextLabel")
                dropdownTitle.Name = "Dropdown_title"
                dropdownTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                dropdownTitle.Text = Title .. ":" 
                dropdownTitle.TextColor3 = library.Theme.DarkText
                dropdownTitle.TextSize = 12
                dropdownTitle.TextXAlignment = Enum.TextXAlignment.Left
                dropdownTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                dropdownTitle.BackgroundTransparency = 1
                dropdownTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdownTitle.BorderSizePixel = 0
                dropdownTitle.Position = UDim2.new(0.037, 0, 0, 0)
                dropdownTitle.Size = UDim2.new(0, 301, 0, 37)
                dropdownTitle.Parent = dropdown

                local dropdownImage = Instance.new("ImageLabel")
                dropdownImage.Name = "Dropdown_image"
                dropdownImage.Image = "rbxassetid://11452765099"
                dropdownImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                dropdownImage.BackgroundTransparency = 1
                dropdownImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdownImage.BorderSizePixel = 0
                dropdownImage.Position = UDim2.new(0, 345, 0, 8)
                dropdownImage.Size = UDim2.new(0, 20, 0, 20)
                dropdownImage.Parent = dropdown

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = library.Theme.outline
                uIStroke.Parent = dropdown

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = dropdown

                local dropdownScrollingframe = Instance.new("ScrollingFrame",dropdown)
                dropdownScrollingframe.Name = "Dropdown_scrollingframe"
                dropdownScrollingframe.AutomaticCanvasSize = Enum.AutomaticSize.Y
                dropdownScrollingframe.CanvasSize = UDim2.new()
                dropdownScrollingframe.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
                dropdownScrollingframe.ScrollBarImageTransparency = 1
                dropdownScrollingframe.Active = true
                dropdownScrollingframe.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                dropdownScrollingframe.BackgroundTransparency = 1
                dropdownScrollingframe.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdownScrollingframe.BorderSizePixel = 0
                dropdownScrollingframe.Position = UDim2.new(0.0237, 0, 0.203, 0)
                dropdownScrollingframe.Size = UDim2.new(0, 363, 0, 142)
                dropdownScrollingframe.Visible = false 

                local uIListLayout = Instance.new("UIListLayout")
                uIListLayout.Name = "UIListLayout"
                uIListLayout.Padding = UDim.new(0, 8)
                uIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
                uIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                uIListLayout.Parent = dropdownScrollingframe	

                local PlaceHolder = Instance.new("Frame")
                PlaceHolder.Name = "PlaceHolder"
                PlaceHolder.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                PlaceHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
                PlaceHolder.BorderSizePixel = 0
                PlaceHolder.Position = UDim2.new(0.0895, 0, 0, 0)
                PlaceHolder.Size = UDim2.new(0, 2, 0, 0)
                PlaceHolder.Parent = dropdownScrollingframe
                local dropdown_detector = Instance.new("TextButton")
                dropdown_detector.Parent = dropdown
                dropdown_detector.Name = "TextButton"
                dropdown_detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                dropdown_detector.Text = ""
                dropdown_detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                dropdown_detector.TextSize = 14
                dropdown_detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                dropdown_detector.BackgroundTransparency = 1
                dropdown_detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdown_detector.BorderSizePixel = 0
                dropdown_detector.Size = UDim2.new(1,0,0,37)	
                function DROPDOWN.Setvalue(self,val)
                    if Multi then 
                        if table.find(CurrentValue, val) then				
                            table.remove(CurrentValue, table.find(CurrentValue, val))
                            dropdownTitle.Text = Title .. " : " .. table.concat(CurrentValue, ", ")
                            pcall(callback,CurrentValue)
                        else
                            table.insert(CurrentValue, val)
                            dropdownTitle.Text = Title .. " : " .. table.concat(CurrentValue, ", ")

                            pcall(callback,CurrentValue)
                        end;			

                    else 



                        pcall(callback,val)
                        --Option_text.TextColor3 = library.Theme.LightText this seems to be a issue ill try to think of a method 
                        dropdownTitle.Text = Title .. ": " .. tostring(val)

                        for i,v in pairs(dropdownScrollingframe:GetChildren()) do 
                            if v.Name == val  and not v:IsA("UIListLayout")  and v.Name ~= "PlaceHolder" then 
                                ts:Create(v["Option_text"], TweenInfo.new(0.16, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = library.Theme.LightText}):Play();
                            end

                        end

                        for i,v in pairs(dropdownScrollingframe:GetChildren()) do 
                            if  v.Name ~= val and not v:IsA("UIListLayout") and v.Name ~= "PlaceHolder" then
                                ts:Create(v["Option_text"], TweenInfo.new(0.16, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = library.Theme.DarkText}):Play();
                            end

                        end
                    end						

                end
                for i,v in pairs(list) do

                    local option = Instance.new("Frame")
                    option.Name = tostring(v)
                    option.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                    option.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    option.BorderSizePixel = 0
                    option.Position = UDim2.new(0.0413, 0, 0.0282, 0)
                    option.Size = UDim2.new(0, 300, 0, 26)

                    local Option_text = Instance.new("TextLabel")
                    Option_text.Name = "Option_text" --tostring(v)
                    Option_text.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                    Option_text.TextColor3 = library.Theme.DarkText
                    Option_text.TextSize = 12
                    Option_text.Text = tostring(v)
                    Option_text.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
                    Option_text.BackgroundTransparency = 1
                    Option_text.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    Option_text.BorderSizePixel = 0
                    Option_text.Size = UDim2.new(1, 0, 1, 0)
                    Option_text.Parent = option
                    local dropdown_option_detector = Instance.new("TextButton")
                    dropdown_option_detector.Parent = option
                    dropdown_option_detector.Name = "TextButton"
                    dropdown_option_detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                    dropdown_option_detector.Text = ""
                    dropdown_option_detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                    dropdown_option_detector.TextSize = 14
                    dropdown_option_detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    dropdown_option_detector.BackgroundTransparency = 1
                    dropdown_option_detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    dropdown_option_detector.BorderSizePixel = 0
                    dropdown_option_detector.Size = UDim2.new(1,0,0,37)	

                    local uIStroke = Instance.new("UIStroke")
                    uIStroke.Name = "UIStroke"
                    uIStroke.Color = library.Theme.outline
                    uIStroke.Parent = option

                    local uICorner = Instance.new("UICorner")
                    uICorner.Name = "UICorner"
                    uICorner.Parent = option

                    option.Parent= dropdownScrollingframe



                    dropdown_option_detector.MouseButton1Click:Connect(function()

                        DROPDOWN:Setvalue(v)
                    end)
                end

                local Dropdown_visible = false 
                function DROPDOWN:visibilityState()
                    Dropdown_visible = not Dropdown_visible
                    dropdownScrollingframe.Visible = Dropdown_visible

                    ts:Create(dropdown, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = Dropdown_visible == true and UDim2.fromOffset(378, 187) or UDim2.new(0, 378, 0, 37) }):Play()
                    ts:Create(dropdownImage, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Rotation = Dropdown_visible == true and 180 or 0 }):Play()
                    ts:Create(dropdownTitle, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {TextColor3 = Dropdown_visible == true and library.Theme.LightText or library.Theme.DarkText }):Play()
                end
                dropdown_detector.MouseButton1Click:Connect(function()
                    DROPDOWN:visibilityState()

                end)	
                DROPDOWN:Setvalue(Value)
                return DROPDOWN
            end
            function section.TextLabel(self,Info)
                local Info = Info or {}
                local title = Info.Title or Info.title or Info.Text or Info.text or Info.Name or Info.name or "Text"
                local TEXT = {}
                local text = Instance.new("Frame",ElementsHolding_section)
                text.Name = "Text"
                text.Active = true
                text.AutomaticSize = Enum.AutomaticSize.Y
                text.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
                text.BorderColor3 = Color3.fromRGB(0, 0, 0)
                text.BorderSizePixel = 0
                text.Position = UDim2.new(0.0915, 0, 0.0119, 0)
                text.Size = UDim2.new(0, 378, 0, 37)
                text.SizeConstraint = Enum.SizeConstraint.RelativeXX

                local textText = Instance.new("TextLabel")
                textText.Name = "Text_text"
                textText.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                textText.Text = title
                textText.TextColor3 = Color3.fromRGB(255, 255, 255)
                textText.TextSize = 12
                textText.TextWrapped = true
                textText.TextXAlignment = Enum.TextXAlignment.Left
                textText.AutomaticSize = Enum.AutomaticSize.Y
                textText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                textText.BackgroundTransparency = 1
                textText.BorderColor3 = Color3.fromRGB(0, 0, 0)
                textText.BorderSizePixel = 0
                textText.Position = UDim2.new(0.037, 0, 0, 0)
                textText.Size = UDim2.new(0, 364, 0, 37)
                textText.Parent = text

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = Color3.fromRGB(50, 50, 50)
                uIStroke.Parent = text

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = text
                return TEXT
            end
            function section.Colorpicker(self,Info)
                local Flag = Info.Flag or Info.flag or Info.Pointer or Info.pointer or Title

                local Title = Info.Title or Info.title or Info.Name or Info.name or Info.Text or Info.text or "Button"
                local callback = Info.Callback or Info.callback or function() end				
                local Value = Info.Default or Info.default or Info.def or Info.Def or Info.Value or Info.value or Color3.fromRGB(255,100,100)
                local COLORPICKER = {Opened = false}

                local colorpicker = Instance.new("Frame",ElementsHolding_section)
                colorpicker.Name = Title
                colorpicker.BackgroundColor3 = library.Theme.Elemnts_color

                colorpicker.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpicker.BorderSizePixel = 0
                colorpicker.Position = UDim2.new(0.0915, 0, 0.0119, 0)
                colorpicker.Size = UDim2.new(0, 378, 0, 37)

                local Colorpicker_detector = Instance.new("TextButton")
                Colorpicker_detector.Parent = colorpicker
                Colorpicker_detector.Name = "TextButton"
                Colorpicker_detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                Colorpicker_detector.Text = ""
                Colorpicker_detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                Colorpicker_detector.TextSize = 14
                Colorpicker_detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Colorpicker_detector.BackgroundTransparency = 1
                Colorpicker_detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Colorpicker_detector.BorderSizePixel = 0
                Colorpicker_detector.Size = UDim2.new(1,0,0,37)

                local colorpickerTitle = Instance.new("TextLabel")
                colorpickerTitle.Name = "Colorpicker_title"
                colorpickerTitle.Text = Title
                colorpickerTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                colorpickerTitle.TextColor3 = library.Theme.DarkText -- Color3.fromRGB(157, 157, 157)
                colorpickerTitle.TextSize = 12
                colorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left
                colorpickerTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                colorpickerTitle.BackgroundTransparency = 1
                colorpickerTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpickerTitle.BorderSizePixel = 0
                colorpickerTitle.Position = UDim2.new(0.037, 0, 0, 0)
                colorpickerTitle.Size = UDim2.new(0, 175, 0, 37)
                colorpickerTitle.Parent = colorpicker

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = library.Theme.outline
                uIStroke.Parent = colorpicker

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.Parent = colorpicker

                local colorpickerImage = Instance.new("ImageLabel",colorpicker)
                colorpickerImage.Name = "Colorpicker_image"
                colorpickerImage.Image = "rbxassetid://8604555937"
                colorpickerImage.ImageColor3 = Value 
                colorpickerImage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                colorpickerImage.BackgroundTransparency = 1
                colorpickerImage.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpickerImage.BorderSizePixel = 0
                colorpickerImage.Position = UDim2.new(0, 345, 0, 8)
                colorpickerImage.Size = UDim2.new(0, 20, 0, 20)

                local colorpickerContainer = Instance.new("Frame",colorpicker)
                colorpickerContainer.Name = "Colorpicker_Container"
                colorpickerContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                colorpickerContainer.BackgroundTransparency = 1
                colorpickerContainer.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpickerContainer.BorderSizePixel = 0
                colorpickerContainer.Position = UDim2.new(0.0212, 0, 0.23, 0)
                colorpickerContainer.Size = UDim2.new(0, 369, 0, 144)
                colorpickerContainer.Visible = false 

                local colorpickerValueFrame = Instance.new("Frame")
                colorpickerValueFrame.Name = "Colorpicker_value_Frame"
                colorpickerValueFrame.BackgroundColor3 =  Color3.fromRGB(22, 22, 22)
                colorpickerValueFrame.BackgroundTransparency = 0
                colorpickerValueFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpickerValueFrame.BorderSizePixel = 0
                colorpickerValueFrame.Position = UDim2.new(0.678, 0, 0.0103, 0)
                colorpickerValueFrame.Size = UDim2.new(0, 105, 0, 27)

                local colorpickerValue = Instance.new("TextLabel")
                colorpickerValue.Name = "Colorpicker_value"
                colorpickerValue.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                colorpickerValue.Text = "1,1,1"
                colorpickerValue.TextColor3 = Color3.fromRGB(216, 216, 216)
                colorpickerValue.TextSize = 12
                colorpickerValue.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
                colorpickerValue.BackgroundTransparency = 1
                colorpickerValue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                colorpickerValue.BorderSizePixel = 0
                colorpickerValue.Size = UDim2.new(1, 0, 1.08, 0)
                colorpickerValue.Parent = colorpickerValueFrame

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = Color3.fromRGB(42, 42, 42)
                uIStroke.Parent = colorpickerValueFrame

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.CornerRadius = UDim.new(0, 6)
                uICorner.Parent = colorpickerValueFrame

                colorpickerValueFrame.Parent = colorpickerContainer

                local hUESelection = Instance.new("ImageButton")
                hUESelection.Name = "HUE_selection"
                hUESelection.Image = "rbxassetid://11970136481"
                hUESelection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                hUESelection.BorderColor3 = library.Theme.outline
                hUESelection.Position = UDim2.new(0.604, 0, 0.00453, 0)
                hUESelection.Size = UDim2.new(0, 14, 0, 135)

                local Hslider = Instance.new("Frame")
                Hslider.Name = "H_Slider"
                Hslider.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                Hslider.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Hslider.Position = UDim2.new(-0.214, 0, -0.0139, 0)
                Hslider.Size = UDim2.new(0, 19, 0, 3)
                Hslider.Parent = hUESelection

                hUESelection.Parent = colorpickerContainer

                local sVSelection = Instance.new("ImageButton")
                sVSelection.Name = "SV_selection"
                sVSelection.Image = "rbxassetid://11970108040"
                sVSelection.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                sVSelection.BorderColor3 = library.Theme.outline
                sVSelection.Position = UDim2.new(0.00478, 0, 0.00453, 0)
                sVSelection.Size = UDim2.new(0, 212, 0, 135)

                local sVSlider = Instance.new("Frame")
                sVSlider.Name = "SV_slider"
                sVSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                sVSlider.BackgroundTransparency = 1
                sVSlider.Position = UDim2.new(0.961, 0, 0.0187, 0)
                sVSlider.Size = UDim2.new(0, 7, 0, 7)

                local uICorner1 = Instance.new("UICorner")
                uICorner1.Name = "UICorner"
                uICorner1.CornerRadius = UDim.new(0, 100)
                uICorner1.Parent = sVSlider

                local uIStroke1 = Instance.new("UIStroke")
                uIStroke1.Name = "UIStroke"
                uIStroke1.Color = Color3.fromRGB(255, 255, 255)
                uIStroke1.Parent = sVSlider

                sVSlider.Parent = sVSelection

                sVSelection.Parent = colorpickerContainer

                local autoRGBFrame = Instance.new("Frame",colorpickerContainer)
                autoRGBFrame.Name = "Auto_RGB_Frame"
                autoRGBFrame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
                autoRGBFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                autoRGBFrame.BorderSizePixel = 0
                autoRGBFrame.Position = UDim2.new(0.678, 0,0.246, 0)
                autoRGBFrame.Size = UDim2.new(0, 30, 0, 30)

                local uIStroke = Instance.new("UIStroke")
                uIStroke.Name = "UIStroke"
                uIStroke.Color = Color3.fromRGB(42, 42, 42)
                uIStroke.Parent = autoRGBFrame

                local uICorner = Instance.new("UICorner")
                uICorner.Name = "UICorner"
                uICorner.CornerRadius = UDim.new(0, 6)
                uICorner.Parent = autoRGBFrame

                local rainbowIcon = Instance.new("ImageLabel")
                rainbowIcon.Name = "Rainbow_Icon"
                rainbowIcon.Image = "rbxassetid://15156700811"
                rainbowIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                rainbowIcon.BackgroundTransparency = 1
                rainbowIcon.BorderColor3 = Color3.fromRGB(0, 0, 0)
                rainbowIcon.BorderSizePixel = 0
                rainbowIcon.Size = UDim2.new(0,30,0,30)
                rainbowIcon.Parent = autoRGBFrame

                local Rainbow_Detector = Instance.new("TextButton")
                Rainbow_Detector.Parent = autoRGBFrame
                Rainbow_Detector.Name = "Rainbow_Detector"
                Rainbow_Detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                Rainbow_Detector.Text = ""
                Rainbow_Detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                Rainbow_Detector.TextSize = 14
                Rainbow_Detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Rainbow_Detector.BackgroundTransparency = 1
                Rainbow_Detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Rainbow_Detector.BorderSizePixel = 0
                Rainbow_Detector.Size = UDim2.new(1,0,1,0)
                local rainbowLabel = Instance.new("TextLabel",autoRGBFrame)
                rainbowLabel.Name = "rainbow_label"
                rainbowLabel.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                rainbowLabel.Text = "Rainbow"
                rainbowLabel.Visible = false 
                rainbowLabel.TextColor3 =library.Theme.DarkText
                rainbowLabel.TextSize = 12
                rainbowLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                rainbowLabel.BackgroundTransparency = 1
                rainbowLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                rainbowLabel.BorderSizePixel = 0
                rainbowLabel.Position = UDim2.new(0.286, 0, 0, 0)
                rainbowLabel.Size = UDim2.new(0.714, 0, 1, 0)
                Rainbow_Detector.MouseEnter:Connect(function()
                    ts:Create(autoRGBFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0,105,0,30)}):Play()

                    rainbowLabel.Visible = true 			

                end)
                Rainbow_Detector.MouseLeave:Connect(function()
                    ts:Create(autoRGBFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size =UDim2.new(0,30,0,30)}):Play()

                    rainbowLabel.Visible = false  			

                end)


                function COLORPICKER.VisiblityState(self)
                    ts:Create(colorpicker, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Size = self.Opened == true and UDim2.fromOffset(378,187) or UDim2.fromOffset(378,37) }):Play()
                    colorpickerTitle.TextColor3 = self.Opened == true and library.Theme.LightText or library.Theme.DarkText
                    colorpickerContainer.Visible = self.Opened 
                end

                Colorpicker_detector.MouseButton1Click:Connect(function()
                    COLORPICKER.Opened = not COLORPICKER.Opened
                    COLORPICKER:VisiblityState()
                end)

                ColorH = 1 - (math.clamp(Hslider.AbsolutePosition.Y - hUESelection.AbsolutePosition.Y, 0, hUESelection.AbsoluteSize.Y) / hUESelection.AbsoluteSize.Y)
                ColorS = (math.clamp(sVSlider.AbsolutePosition.X - sVSelection.AbsolutePosition.X, 0, sVSelection.AbsoluteSize.X) / sVSelection.AbsoluteSize.X)
                ColorV = 1 - (math.clamp(sVSlider.AbsolutePosition.Y - sVSelection.AbsolutePosition.Y, 0, sVSelection.AbsoluteSize.Y) / sVSelection.AbsoluteSize.Y)

                function COLORPICKER:UpdateColorPicker()
                    --if colorpickerContainer.Visible == true then 
                    colorpickerImage.ImageColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                    R,G,B = utility:ToRGB(colorpickerImage.ImageColor3)
                    Hslider.Position = UDim2.new(-0.133,0,ColorH,0)
                    sVSelection.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
                    colorpickerValue.Text = tostring(math.floor(R)) .. "," .. tostring(math.floor(G)) ..  "," ..tostring(math.floor(B))
                    -- sVSeEction.BackgroundColor3 =  Color3.fromHSV(ColorH, ColorS, 1 )
                    -- local R,G,B = ColorH:ToHex()
                    --  local HEX = Colorpickerpreview.BackgroundColor3:ToHex()

                    pcall(callback,colorpickerImage.ImageColor3)
                    --end
                end 

                function COLORPICKER.SetValue(self,H,S,V)

                    ColorH = H
                    ColorS  = S
                    ColorV = V
                    self:UpdateColorPicker()

                end


                sVSelection.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if ColorInput then
                            ColorInput:Disconnect()
                        end
                        ColorInput = rs.RenderStepped:Connect(function()
                            local ColorX = (math.clamp(Mouse.X - sVSelection.AbsolutePosition.X, 0, sVSelection.AbsoluteSize.X) / sVSelection.AbsoluteSize.X)
                            local ColorY = (math.clamp(Mouse.Y - sVSelection.AbsolutePosition.Y, 0, sVSelection.AbsoluteSize.Y) / sVSelection.AbsoluteSize.Y)
                            sVSlider.Position = UDim2.new(ColorX, 0, ColorY, 0)
                            ColorS = ColorX
                            ColorV = 1 - ColorY
                            COLORPICKER:UpdateColorPicker()
                        end)
                    end
                end)

                sVSelection.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if ColorInput then
                            ColorInput:Disconnect()
                        end
                    end
                end)




                hUESelection.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if HueInput then
                            HueInput:Disconnect()
                        end

                        HueInput = rs.RenderStepped:Connect(function()
                            local HueY = (math.clamp(Mouse.Y - hUESelection.AbsolutePosition.Y, 0, hUESelection.AbsoluteSize.Y) / hUESelection.AbsoluteSize.Y)


                            ColorH =  HueY


                            COLORPICKER:UpdateColorPicker()
                        end)
                    end
                end)

                hUESelection.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if HueInput then
                            HueInput:Disconnect()
                        end
                    end



                end)
                local Rainbow_toggled  = false

                Rainbow_Detector.MouseButton1Click:Connect(function()

                    Rainbow_toggled = not Rainbow_toggled
                    ts:Create(rainbowLabel, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), { TextColor3 = Rainbow_toggled == true and  library.Theme.LightText or library.Theme.DarkText }):Play()
                end)
                task.spawn(function()
                    while game:GetService('RunService').RenderStepped:Wait() do
                        if Rainbow_toggled then 
                            COLORPICKER:SetValue((tick() % 6 / 6),1,1)
                        end;
                    end;
                end)
                return COLORPICKER

                end
                function section.CreateSlider(self,Info)
                    local SLIDER = {}
                    local Flag = Info.Flag or Info.flag or Info.Pointer or Info.pointer or Title
                    local Info = Info or {}
                    local Title = Info.Title or Info.title or Info.text or Info.Text or Info.Name or Info.name or "Walkspeed"
                    local Value = Info.Value or Info.value or Info.Val or Info.CurrentValue or Info.val or 0
                    local Min = Info.Min or Info.min or 0
                    local Max = Info.Max or Info.max or 100
                    local Increment = Info.Increment or Info.increment or 1
                    local Increment = 1 / Increment
                    local callback = Info.Callback or Info.callback or function() end					

                    local slider = Instance.new("Frame",ElementsHolding_section)
                    slider.Name = Title
                    slider.BackgroundColor3 = library.Theme.Elemnts_color
                    slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    slider.BorderSizePixel = 0
                    slider.Position = UDim2.new(0.0915, 0, 0.0119, 0)
                    slider.Size = UDim2.new(0, 378, 0, 37)

                    local Slider_Detector = Instance.new("TextButton")
                    Slider_Detector.Parent = slider
                    Slider_Detector.Name = "TextButton"
                    Slider_Detector.FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json")
                    Slider_Detector.Text = ""
                    Slider_Detector.TextColor3 = Color3.fromRGB(0, 0, 0)
                    Slider_Detector.TextSize = 14
                    Slider_Detector.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    Slider_Detector.BackgroundTransparency = 1
                    Slider_Detector.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    Slider_Detector.BorderSizePixel = 0
                    Slider_Detector.Size = UDim2.fromScale(1, 1)

                    local sliderTitle = Instance.new("TextLabel")
                    sliderTitle.Name = "Slider_title"
                    sliderTitle.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                    sliderTitle.TextColor3 = Color3.fromRGB(157, 157, 157)
                    sliderTitle.TextSize = 12
                    sliderTitle.Text = Title
                    sliderTitle.TextXAlignment = Enum.TextXAlignment.Left
                    sliderTitle.BackgroundColor3 =library.Theme.LightText
                    sliderTitle.BackgroundTransparency = 1
                    sliderTitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    sliderTitle.BorderSizePixel = 0
                    sliderTitle.Position = UDim2.new(0.037, 0, 0, 0)
                    sliderTitle.Size = UDim2.new(0, 301, 0, 37)
                    sliderTitle.Parent = slider

                    local sliderValue = Instance.new("TextBox")
                    sliderValue.Name = "Slider_value"
                    sliderValue.ClearTextOnFocus = false
                    sliderValue.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json")
                    sliderValue.Text = tostring(Value)
                    sliderValue.TextColor3 = library.Theme.DarkText
                    sliderValue.TextSize = 12
                    sliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    sliderValue.BackgroundTransparency = 1
                    sliderValue.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    sliderValue.BorderSizePixel = 0
                    sliderValue.Position = UDim2.new(0.909, 0, 0.189, 0)
                    sliderValue.Size = UDim2.new(0, 27, 0, 23)
                    sliderValue.Parent = slider

                    local sliderBar = Instance.new("Frame")
                    sliderBar.Name = "Slider_bar"
                    sliderBar.BackgroundColor3 = Color3.fromRGB(47, 47, 47)
                    sliderBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    sliderBar.BorderSizePixel = 0
                    sliderBar.Position = UDim2.new(0.290, 0, 0.459, 0)
                    sliderBar.Size = UDim2.new(0, 220, 0, 4)

                    local sliderIndicator = Instance.new("Frame")
                    sliderIndicator.Name = "slider_indicator"
                    sliderIndicator.BackgroundColor3 = library.Theme.Accent -- Color3.fromRGB(86, 95, 232)
                    sliderIndicator.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    sliderIndicator.BorderSizePixel = 0
                    sliderIndicator.Size = UDim2.new(0.0769, 100, 1, 0)

                    local indicator = Instance.new("Frame")
                    indicator.Name = "Indicator"
                    indicator.AnchorPoint = Vector2.new(0, 0.5)
                    indicator.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
                    indicator.BorderSizePixel = 0
                    indicator.Position = UDim2.new(1, 0, 0.5, 0)
                    indicator.Size = UDim2.new(0, 14, 0, 14)

                    local uICorner = Instance.new("UICorner")
                    uICorner.Name = "UICorner"
                    uICorner.CornerRadius = UDim.new(1, 0)
                    uICorner.Parent = indicator

                    indicator.Parent = sliderIndicator

                    local uICorner1 = Instance.new("UICorner")
                    uICorner1.Name = "UICorner"
                    uICorner1.Parent = sliderIndicator

                    sliderIndicator.Parent = sliderBar

                    local uICorner2 = Instance.new("UICorner")
                    uICorner2.Name = "UICorner"
                    uICorner2.Parent = sliderBar

                    sliderBar.Parent = slider

                    local uIStroke = Instance.new("UIStroke")
                    uIStroke.Name = "UIStroke"
                    uIStroke.Color = library.Theme.outline
                    uIStroke.Parent = slider

                    local uICorner3 = Instance.new("UICorner")
                    uICorner3.Name = "UICorner"
                    uICorner3.Parent = slider			


                    function SLIDER:UpdateValue()
                        sliderValue.Text = tostring(Value)  --slider.suf

                        local percent = 1- (Max - Value) / (Max - Min) 
                        ts:Create(sliderIndicator, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, percent   * sliderBar.AbsoluteSize.X  ,1, 0)}):Play()
                        --indicator_slider.Position = udim2New(0, percent  * sliderBar.AbsoluteSize.X,0.5, 0)
                    end

                    function SLIDER:SetValue(value)
                        if typeof(value) ~= "number" then return end 
                        Value =  math.clamp(math.round(value * Increment) / Increment, Min, Max)

                        SLIDER:UpdateValue()
                        callback(Value)
                    end
                    SLIDER:SetValue(Value)



                    local Holding = false
                    Slider_Detector.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then 
                            Holding = true

                            local pos =UDim2.new(math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1),-6,-1.30499995,0)

                            local SliderV = math.floor(((pos.X.Scale * Max) / Max) * (Max - Min) + Min)

                            SLIDER:SetValue(SliderV)
                        end 
                    end)
                    Slider_Detector.InputChanged:Connect(function(input)
                        if  input.UserInputType == Enum.UserInputType.MouseMovement and Holding == true   then 
                            local pos =UDim2.new(math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1),-6,-1.30499995,0)


                            local SliderV = math.floor(((pos.X.Scale * Max) / Max) * (Max - Min) + Min)
                            SLIDER:SetValue(SliderV)
                        end 
                    end) 
                    Slider_Detector.InputEnded:Connect(function(input)
                        if  input.UserInputType == Enum.UserInputType.MouseButton1 and Holding == true then 
                            Holding = false 
                            local pos =UDim2.new(math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1),-6,-1.30499995,0)


                            local SliderV = math.floor(((pos.X.Scale * Max) / Max) * (Max - Min) + Min)
                            SLIDER:SetValue(SliderV)

                        end
                    end)


                    sliderValue.FocusLost:Connect(function()

                        SLIDER:SetValue(tonumber(sliderValue.Text))
                end)	
                return SLIDER


            end
            return section 
        end
        return tab 
    end


    return window
end
